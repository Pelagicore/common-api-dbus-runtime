/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 2.1.5.qualifier.
* Used org.franca.core 0.8.10.201309262002.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <commonapi/tests/ExtendedInterfaceStubDefault.h>

namespace commonapi {
namespace tests {

ExtendedInterfaceStubDefault::ExtendedInterfaceStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(ExtendedInterface::getInterfaceVersion()) {
}

const CommonAPI::Version& ExtendedInterfaceStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> clientId) {
    return interfaceVersion_;
}

ExtendedInterfaceStubRemoteEvent* ExtendedInterfaceStubDefault::initStubAdapter(const std::shared_ptr<ExtendedInterfaceStubAdapter>& stubAdapter) {
    TestInterfaceStubDefault::initStubAdapter(stubAdapter);
    CommonAPI::Stub<ExtendedInterfaceStubAdapter, ExtendedInterfaceStubRemoteEvent>::stubAdapter_ = stubAdapter;
    return &remoteEventHandler_;
}


void ExtendedInterfaceStubDefault::TestIntMethodExtended(const std::shared_ptr<CommonAPI::ClientId> clientId, uint32_t inInt) {
    // Call old style methods in default 
    TestIntMethodExtended(inInt);
}
void ExtendedInterfaceStubDefault::TestIntMethodExtended(uint32_t inInt) {
    // No operation in default
}




ExtendedInterfaceStubDefault::RemoteEventHandler::RemoteEventHandler(ExtendedInterfaceStubDefault* defaultStub):
        TestInterfaceStubDefault::RemoteEventHandler(defaultStub),
        defaultStub_(defaultStub) {
}

} // namespace tests
} // namespace commonapi
